// Place your key bindings in this file to override the defaults
[
    // ... It enables to switch between panels in VSCode as you were in Navegator
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditor"
    },
    // Use ctrl+d to delete lines
    {
        "key": "ctrl+d",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    // Use ctrl+k to select next words
    {
        "key": "ctrl+k",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    // Use ctrl+" open and close terminal
    {
        "key": "ctrl+'",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+;",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+/",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    // ctrl+c and +v in terminal
    {
        "key": "ctrl+c",
        "command": "workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalTextSelected"
    },
    {
        "key": "ctrl+v",
        "command": "workbench.action.terminal.paste",
        "when": "terminalFocus"
    },
    // Run all below/above cells/chunks in jupyter/uarto
    {
        "key": "ctrl+shift+up",
        "command": "notebook.cell.executeCellsAbove",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+up",
        "command": "quarto.runCellsAbove",
        "when": "editorTextFocus && quarto.hasActiveNotebook"
    },
    {
        "key": "ctrl+shift+down",
        "command": "notebook.cell.executeCellAndBelow",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+down",
        "command": "quarto.runCellAndBelow",
        "when": "editorTextFocus && quarto.hasActiveNotebook"
    },
    // Restart Kernel in jupyter
    {
        "key": "ctrl+shift+r",
        "command": "jupyter.restartkernel"
    },
    // to render quarto documents
    {
        "key": "ctrl+shift+k",
        "command": "quarto.preview",
        "when": "editorTextFocus && editorLangId == 'quarto'"
    },
    //  To paste with indentation - https://marketplace.visualstudio.com/items?itemName=Rubymaniac.vscode-paste-and-indent
    {
        "key": "Ctrl+v",
        "command": "pasteAndIndent.action",
        "when": "editorTextFocus && !editorReadonly"
    },
    // {
    //     "key": "Ctrl+v",
    //     "command": "editor.action.clipboardPasteAction",
    //     "when": "!editorTextFocus"
    // },
    {
        "key": "Ctrl+shift+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    // Upper and Lower Cases words
    {
        "key": "ctrl+alt+u",
        "command": "editor.action.transformToUppercase",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+l",
        "command": "editor.action.transformToLowercase",
        "when": "textInputFocus"
    },
    // Execute all notebook cells - Run all command
    {
        "key": "ctrl+shift+k",
        "command": "python.execInTerminal-icon",
        "when": "editorLangId == 'python'"
    },
    {
        "key": "ctrl+shift+k",
        "command": "jupyter.restartkernelandrunallcells",
        "when": "isWorkspaceTrusted && jupyter.interactive.canRestartNotebookKernel || isWorkspaceTrusted && jupyter.notebookeditor.canrestartNotebookkernel && notebookKernel =~ /^ms-toolsai.jupyter\\//"
    },
    {
        "key": "ctrl+v",
        "command": "workbench.action.terminal.paste",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-workbench.action.terminal.paste",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "f5",
        "command": "workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'  && editorFocus"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    }
]
